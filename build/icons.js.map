{
  "version": 3,
  "sources": ["../node_modules/html-to-image/src/util.ts", "../node_modules/html-to-image/src/clone-pseudos.ts", "../node_modules/html-to-image/src/mimes.ts", "../node_modules/html-to-image/src/dataurl.ts", "../node_modules/html-to-image/src/clone-node.ts", "../node_modules/html-to-image/src/embed-resources.ts", "../node_modules/html-to-image/src/embed-images.ts", "../node_modules/html-to-image/src/apply-style.ts", "../node_modules/html-to-image/src/embed-webfonts.ts", "../node_modules/html-to-image/src/index.ts", "../src/icons.js"],
  "sourcesContent": ["import type { Options } from './types'\n\nexport function resolveUrl(url: string, baseUrl: string | null): string {\n  // url is absolute already\n  if (url.match(/^[a-z]+:\\/\\//i)) {\n    return url\n  }\n\n  // url is absolute already, without protocol\n  if (url.match(/^\\/\\//)) {\n    return window.location.protocol + url\n  }\n\n  // dataURI, mailto:, tel:, etc.\n  if (url.match(/^[a-z]+:/i)) {\n    return url\n  }\n\n  const doc = document.implementation.createHTMLDocument()\n  const base = doc.createElement('base')\n  const a = doc.createElement('a')\n\n  doc.head.appendChild(base)\n  doc.body.appendChild(a)\n\n  if (baseUrl) {\n    base.href = baseUrl\n  }\n\n  a.href = url\n\n  return a.href\n}\n\nexport const uuid = (() => {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0\n\n  // ref: http://stackoverflow.com/a/6248722/2519373\n  const random = () =>\n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4)\n\n  return () => {\n    counter += 1\n    return `u${random()}${counter}`\n  }\n})()\n\nexport function delay<T>(ms: number) {\n  return (args: T) =>\n    new Promise<T>((resolve) => {\n      setTimeout(() => resolve(args), ms)\n    })\n}\n\nexport function toArray<T>(arrayLike: any): T[] {\n  const arr: T[] = []\n\n  for (let i = 0, l = arrayLike.length; i < l; i++) {\n    arr.push(arrayLike[i])\n  }\n\n  return arr\n}\n\nfunction px(node: HTMLElement, styleProperty: string) {\n  const win = node.ownerDocument.defaultView || window\n  const val = win.getComputedStyle(node).getPropertyValue(styleProperty)\n  return val ? parseFloat(val.replace('px', '')) : 0\n}\n\nfunction getNodeWidth(node: HTMLElement) {\n  const leftBorder = px(node, 'border-left-width')\n  const rightBorder = px(node, 'border-right-width')\n  return node.clientWidth + leftBorder + rightBorder\n}\n\nfunction getNodeHeight(node: HTMLElement) {\n  const topBorder = px(node, 'border-top-width')\n  const bottomBorder = px(node, 'border-bottom-width')\n  return node.clientHeight + topBorder + bottomBorder\n}\n\nexport function getImageSize(targetNode: HTMLElement, options: Options = {}) {\n  const width = options.width || getNodeWidth(targetNode)\n  const height = options.height || getNodeHeight(targetNode)\n\n  return { width, height }\n}\n\nexport function getPixelRatio() {\n  let ratio\n\n  let FINAL_PROCESS\n  try {\n    FINAL_PROCESS = process\n  } catch (e) {\n    // pass\n  }\n\n  const val =\n    FINAL_PROCESS && FINAL_PROCESS.env\n      ? FINAL_PROCESS.env.devicePixelRatio\n      : null\n  if (val) {\n    ratio = parseInt(val, 10)\n    if (Number.isNaN(ratio)) {\n      ratio = 1\n    }\n  }\n  return ratio || window.devicePixelRatio || 1\n}\n\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384\n\nexport function checkCanvasDimensions(canvas: HTMLCanvasElement) {\n  if (\n    canvas.width > canvasDimensionLimit ||\n    canvas.height > canvasDimensionLimit\n  ) {\n    if (\n      canvas.width > canvasDimensionLimit &&\n      canvas.height > canvasDimensionLimit\n    ) {\n      if (canvas.width > canvas.height) {\n        canvas.height *= canvasDimensionLimit / canvas.width\n        canvas.width = canvasDimensionLimit\n      } else {\n        canvas.width *= canvasDimensionLimit / canvas.height\n        canvas.height = canvasDimensionLimit\n      }\n    } else if (canvas.width > canvasDimensionLimit) {\n      canvas.height *= canvasDimensionLimit / canvas.width\n      canvas.width = canvasDimensionLimit\n    } else {\n      canvas.width *= canvasDimensionLimit / canvas.height\n      canvas.height = canvasDimensionLimit\n    }\n  }\n}\n\nexport function canvasToBlob(\n  canvas: HTMLCanvasElement,\n  options: Options = {},\n): Promise<Blob | null> {\n  if (canvas.toBlob) {\n    return new Promise((resolve) => {\n      canvas.toBlob(\n        resolve,\n        options.type ? options.type : 'image/png',\n        options.quality ? options.quality : 1,\n      )\n    })\n  }\n\n  return new Promise((resolve) => {\n    const binaryString = window.atob(\n      canvas\n        .toDataURL(\n          options.type ? options.type : undefined,\n          options.quality ? options.quality : undefined,\n        )\n        .split(',')[1],\n    )\n    const len = binaryString.length\n    const binaryArray = new Uint8Array(len)\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i)\n    }\n\n    resolve(\n      new Blob([binaryArray], {\n        type: options.type ? options.type : 'image/png',\n      }),\n    )\n  })\n}\n\nexport function createImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image()\n    img.decode = () => resolve(img) as any\n    img.onload = () => resolve(img)\n    img.onerror = reject\n    img.crossOrigin = 'anonymous'\n    img.decoding = 'async'\n    img.src = url\n  })\n}\n\nexport async function svgToDataURL(svg: SVGElement): Promise<string> {\n  return Promise.resolve()\n    .then(() => new XMLSerializer().serializeToString(svg))\n    .then(encodeURIComponent)\n    .then((html) => `data:image/svg+xml;charset=utf-8,${html}`)\n}\n\nexport async function nodeToDataURL(\n  node: HTMLElement,\n  width: number,\n  height: number,\n): Promise<string> {\n  const xmlns = 'http://www.w3.org/2000/svg'\n  const svg = document.createElementNS(xmlns, 'svg')\n  const foreignObject = document.createElementNS(xmlns, 'foreignObject')\n\n  svg.setAttribute('width', `${width}`)\n  svg.setAttribute('height', `${height}`)\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n\n  foreignObject.setAttribute('width', '100%')\n  foreignObject.setAttribute('height', '100%')\n  foreignObject.setAttribute('x', '0')\n  foreignObject.setAttribute('y', '0')\n  foreignObject.setAttribute('externalResourcesRequired', 'true')\n\n  svg.appendChild(foreignObject)\n  foreignObject.appendChild(node)\n  return svgToDataURL(svg)\n}\n\nexport const isInstanceOfElement = <\n  T extends typeof Element | typeof HTMLElement | typeof SVGImageElement,\n>(\n  node: Element | HTMLElement | SVGImageElement,\n  instance: T,\n): node is T['prototype'] => {\n  if (node instanceof instance) return true\n\n  const nodePrototype = Object.getPrototypeOf(node)\n\n  if (nodePrototype === null) return false\n\n  return (\n    nodePrototype.constructor.name === instance.name ||\n    isInstanceOfElement(nodePrototype, instance)\n  )\n}\n", "import { uuid, toArray } from './util'\n\ntype Pseudo = ':before' | ':after'\n\nfunction formatCSSText(style: CSSStyleDeclaration) {\n  const content = style.getPropertyValue('content')\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`\n}\n\nfunction formatCSSProperties(style: CSSStyleDeclaration) {\n  return toArray<string>(style)\n    .map((name) => {\n      const value = style.getPropertyValue(name)\n      const priority = style.getPropertyPriority(name)\n\n      return `${name}: ${value}${priority ? ' !important' : ''};`\n    })\n    .join(' ')\n}\n\nfunction getPseudoElementStyle(\n  className: string,\n  pseudo: Pseudo,\n  style: CSSStyleDeclaration,\n): Text {\n  const selector = `.${className}:${pseudo}`\n  const cssText = style.cssText\n    ? formatCSSText(style)\n    : formatCSSProperties(style)\n\n  return document.createTextNode(`${selector}{${cssText}}`)\n}\n\nfunction clonePseudoElement<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  pseudo: Pseudo,\n) {\n  const style = window.getComputedStyle(nativeNode, pseudo)\n  const content = style.getPropertyValue('content')\n  if (content === '' || content === 'none') {\n    return\n  }\n\n  const className = uuid()\n  try {\n    clonedNode.className = `${clonedNode.className} ${className}`\n  } catch (err) {\n    return\n  }\n\n  const styleElement = document.createElement('style')\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style))\n  clonedNode.appendChild(styleElement)\n}\n\nexport function clonePseudoElements<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n) {\n  clonePseudoElement(nativeNode, clonedNode, ':before')\n  clonePseudoElement(nativeNode, clonedNode, ':after')\n}\n", "const WOFF = 'application/font-woff'\nconst JPEG = 'image/jpeg'\nconst mimes: { [key: string]: string } = {\n  woff: WOFF,\n  woff2: WOFF,\n  ttf: 'application/font-truetype',\n  eot: 'application/vnd.ms-fontobject',\n  png: 'image/png',\n  jpg: JPEG,\n  jpeg: JPEG,\n  gif: 'image/gif',\n  tiff: 'image/tiff',\n  svg: 'image/svg+xml',\n  webp: 'image/webp',\n}\n\nfunction getExtension(url: string): string {\n  const match = /\\.([^./]*?)$/g.exec(url)\n  return match ? match[1] : ''\n}\n\nexport function getMimeType(url: string): string {\n  const extension = getExtension(url).toLowerCase()\n  return mimes[extension] || ''\n}\n", "import { Options } from './types'\n\nfunction getContentFromDataUrl(dataURL: string) {\n  return dataURL.split(/,/)[1]\n}\n\nexport function isDataUrl(url: string) {\n  return url.search(/^(data:)/) !== -1\n}\n\nexport function makeDataUrl(content: string, mimeType: string) {\n  return `data:${mimeType};base64,${content}`\n}\n\nexport async function fetchAsDataURL<T>(\n  url: string,\n  init: RequestInit | undefined,\n  process: (data: { result: string; res: Response }) => T,\n): Promise<T> {\n  const res = await fetch(url, init)\n  if (res.status === 404) {\n    throw new Error(`Resource \"${res.url}\" not found`)\n  }\n  const blob = await res.blob()\n  return new Promise<T>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onerror = reject\n    reader.onloadend = () => {\n      try {\n        resolve(process({ res, result: reader.result as string }))\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    reader.readAsDataURL(blob)\n  })\n}\n\nconst cache: { [url: string]: string } = {}\n\nfunction getCacheKey(\n  url: string,\n  contentType: string | undefined,\n  includeQueryParams: boolean | undefined,\n) {\n  let key = url.replace(/\\?.*/, '')\n\n  if (includeQueryParams) {\n    key = url\n  }\n\n  // font resource\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '')\n  }\n\n  return contentType ? `[${contentType}]${key}` : key\n}\n\nexport async function resourceToDataURL(\n  resourceUrl: string,\n  contentType: string | undefined,\n  options: Options,\n) {\n  const cacheKey = getCacheKey(\n    resourceUrl,\n    contentType,\n    options.includeQueryParams,\n  )\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey]\n  }\n\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime()\n  }\n\n  let dataURL: string\n  try {\n    const content = await fetchAsDataURL(\n      resourceUrl,\n      options.fetchRequestInit,\n      ({ res, result }) => {\n        if (!contentType) {\n          // eslint-disable-next-line no-param-reassign\n          contentType = res.headers.get('Content-Type') || ''\n        }\n        return getContentFromDataUrl(result)\n      },\n    )\n    dataURL = makeDataUrl(content, contentType!)\n  } catch (error) {\n    dataURL = options.imagePlaceholder || ''\n\n    let msg = `Failed to fetch resource: ${resourceUrl}`\n    if (error) {\n      msg = typeof error === 'string' ? error : error.message\n    }\n\n    if (msg) {\n      console.warn(msg)\n    }\n  }\n\n  cache[cacheKey] = dataURL\n  return dataURL\n}\n", "import type { Options } from './types'\nimport { clonePseudoElements } from './clone-pseudos'\nimport { createImage, toArray, isInstanceOfElement } from './util'\nimport { getMimeType } from './mimes'\nimport { resourceToDataURL } from './dataurl'\n\nasync function cloneCanvasElement(canvas: HTMLCanvasElement) {\n  const dataURL = canvas.toDataURL()\n  if (dataURL === 'data:,') {\n    return canvas.cloneNode(false) as HTMLCanvasElement\n  }\n  return createImage(dataURL)\n}\n\nasync function cloneVideoElement(video: HTMLVideoElement, options: Options) {\n  if (video.currentSrc) {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    canvas.width = video.clientWidth\n    canvas.height = video.clientHeight\n    ctx?.drawImage(video, 0, 0, canvas.width, canvas.height)\n    const dataURL = canvas.toDataURL()\n    return createImage(dataURL)\n  }\n\n  const poster = video.poster\n  const contentType = getMimeType(poster)\n  const dataURL = await resourceToDataURL(poster, contentType, options)\n  return createImage(dataURL)\n}\n\nasync function cloneIFrameElement(iframe: HTMLIFrameElement) {\n  try {\n    if (iframe?.contentDocument?.body) {\n      return (await cloneNode(\n        iframe.contentDocument.body,\n        {},\n        true,\n      )) as HTMLBodyElement\n    }\n  } catch {\n    // Failed to clone iframe\n  }\n\n  return iframe.cloneNode(false) as HTMLIFrameElement\n}\n\nasync function cloneSingleNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<HTMLElement> {\n  if (isInstanceOfElement(node, HTMLCanvasElement)) {\n    return cloneCanvasElement(node)\n  }\n\n  if (isInstanceOfElement(node, HTMLVideoElement)) {\n    return cloneVideoElement(node, options)\n  }\n\n  if (isInstanceOfElement(node, HTMLIFrameElement)) {\n    return cloneIFrameElement(node)\n  }\n\n  return node.cloneNode(false) as T\n}\n\nconst isSlotElement = (node: HTMLElement): node is HTMLSlotElement =>\n  node.tagName != null && node.tagName.toUpperCase() === 'SLOT'\n\nasync function cloneChildren<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  options: Options,\n): Promise<T> {\n  let children: T[] = []\n\n  if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n    children = toArray<T>(nativeNode.assignedNodes())\n  } else if (\n    isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n    nativeNode.contentDocument?.body\n  ) {\n    children = toArray<T>(nativeNode.contentDocument.body.childNodes)\n  } else {\n    children = toArray<T>((nativeNode.shadowRoot ?? nativeNode).childNodes)\n  }\n\n  if (\n    children.length === 0 ||\n    isInstanceOfElement(nativeNode, HTMLVideoElement)\n  ) {\n    return clonedNode\n  }\n\n  await children.reduce(\n    (deferred, child) =>\n      deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild: HTMLElement | null) => {\n          if (clonedChild) {\n            clonedNode.appendChild(clonedChild)\n          }\n        }),\n    Promise.resolve(),\n  )\n\n  return clonedNode\n}\n\nfunction cloneCSSStyle<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  const targetStyle = clonedNode.style\n  if (!targetStyle) {\n    return\n  }\n\n  const sourceStyle = window.getComputedStyle(nativeNode)\n  if (sourceStyle.cssText) {\n    targetStyle.cssText = sourceStyle.cssText\n    targetStyle.transformOrigin = sourceStyle.transformOrigin\n  } else {\n    toArray<string>(sourceStyle).forEach((name) => {\n      let value = sourceStyle.getPropertyValue(name)\n      if (name === 'font-size' && value.endsWith('px')) {\n        const reducedFont =\n          Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1\n        value = `${reducedFont}px`\n      }\n\n      if (\n        isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        name === 'display' &&\n        value === 'inline'\n      ) {\n        value = 'block'\n      }\n      \n      if (name === 'd' && clonedNode.getAttribute('d')) {\n        value = `path(${clonedNode.getAttribute('d')})`\n      }\n      \n      targetStyle.setProperty(\n        name,\n        value,\n        sourceStyle.getPropertyPriority(name),\n      )\n    })\n  }\n}\n\nfunction cloneInputValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n    clonedNode.innerHTML = nativeNode.value\n  }\n\n  if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n    clonedNode.setAttribute('value', nativeNode.value)\n  }\n}\n\nfunction cloneSelectValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n    const clonedSelect = clonedNode as any as HTMLSelectElement\n    const selectedOption = Array.from(clonedSelect.children).find(\n      (child) => nativeNode.value === child.getAttribute('value'),\n    )\n\n    if (selectedOption) {\n      selectedOption.setAttribute('selected', '')\n    }\n  }\n}\n\nfunction decorate<T extends HTMLElement>(nativeNode: T, clonedNode: T): T {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    cloneCSSStyle(nativeNode, clonedNode)\n    clonePseudoElements(nativeNode, clonedNode)\n    cloneInputValue(nativeNode, clonedNode)\n    cloneSelectValue(nativeNode, clonedNode)\n  }\n\n  return clonedNode\n}\n\nasync function ensureSVGSymbols<T extends HTMLElement>(\n  clone: T,\n  options: Options,\n) {\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : []\n  if (uses.length === 0) {\n    return clone\n  }\n\n  const processedDefs: { [key: string]: HTMLElement } = {}\n  for (let i = 0; i < uses.length; i++) {\n    const use = uses[i]\n    const id = use.getAttribute('xlink:href')\n    if (id) {\n      const exist = clone.querySelector(id)\n      const definition = document.querySelector(id) as HTMLElement\n      if (!exist && definition && !processedDefs[id]) {\n        // eslint-disable-next-line no-await-in-loop\n        processedDefs[id] = (await cloneNode(definition, options, true))!\n      }\n    }\n  }\n\n  const nodes = Object.values(processedDefs)\n  if (nodes.length) {\n    const ns = 'http://www.w3.org/1999/xhtml'\n    const svg = document.createElementNS(ns, 'svg')\n    svg.setAttribute('xmlns', ns)\n    svg.style.position = 'absolute'\n    svg.style.width = '0'\n    svg.style.height = '0'\n    svg.style.overflow = 'hidden'\n    svg.style.display = 'none'\n\n    const defs = document.createElementNS(ns, 'defs')\n    svg.appendChild(defs)\n\n    for (let i = 0; i < nodes.length; i++) {\n      defs.appendChild(nodes[i])\n    }\n\n    clone.appendChild(svg)\n  }\n\n  return clone\n}\n\nexport async function cloneNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n  isRoot?: boolean,\n): Promise<T | null> {\n  if (!isRoot && options.filter && !options.filter(node)) {\n    return null\n  }\n\n  return Promise.resolve(node)\n    .then((clonedNode) => cloneSingleNode(clonedNode, options) as Promise<T>)\n    .then((clonedNode) => cloneChildren(node, clonedNode, options))\n    .then((clonedNode) => decorate(node, clonedNode))\n    .then((clonedNode) => ensureSVGSymbols(clonedNode, options))\n}\n", "import { Options } from './types'\nimport { resolveUrl } from './util'\nimport { getMimeType } from './mimes'\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl'\n\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g\n\nfunction toRegex(url: string): RegExp {\n  // eslint-disable-next-line no-useless-escape\n  const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n  return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g')\n}\n\nexport function parseURLs(cssText: string): string[] {\n  const urls: string[] = []\n\n  cssText.replace(URL_REGEX, (raw, quotation, url) => {\n    urls.push(url)\n    return raw\n  })\n\n  return urls.filter((url) => !isDataUrl(url))\n}\n\nexport async function embed(\n  cssText: string,\n  resourceURL: string,\n  baseURL: string | null,\n  options: Options,\n  getContentFromUrl?: (url: string) => Promise<string>,\n): Promise<string> {\n  try {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL\n    const contentType = getMimeType(resourceURL)\n    let dataURL: string\n    if (getContentFromUrl) {\n      const content = await getContentFromUrl(resolvedURL)\n      dataURL = makeDataUrl(content, contentType)\n    } else {\n      dataURL = await resourceToDataURL(resolvedURL, contentType, options)\n    }\n    return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`)\n  } catch (error) {\n    // pass\n  }\n  return cssText\n}\n\nfunction filterPreferredFontFormat(\n  str: string,\n  { preferredFontFormat }: Options,\n): string {\n  return !preferredFontFormat\n    ? str\n    : str.replace(FONT_SRC_REGEX, (match: string) => {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || []\n          if (!format) {\n            return ''\n          }\n\n          if (format === preferredFontFormat) {\n            return `src: ${src};`\n          }\n        }\n      })\n}\n\nexport function shouldEmbed(url: string): boolean {\n  return url.search(URL_REGEX) !== -1\n}\n\nexport async function embedResources(\n  cssText: string,\n  baseUrl: string | null,\n  options: Options,\n): Promise<string> {\n  if (!shouldEmbed(cssText)) {\n    return cssText\n  }\n\n  const filteredCSSText = filterPreferredFontFormat(cssText, options)\n  const urls = parseURLs(filteredCSSText)\n  return urls.reduce(\n    (deferred, url) =>\n      deferred.then((css) => embed(css, url, baseUrl, options)),\n    Promise.resolve(filteredCSSText),\n  )\n}\n", "import { Options } from './types'\nimport { embedResources } from './embed-resources'\nimport { toArray, isInstanceOfElement } from './util'\nimport { isDataUrl, resourceToDataURL } from './dataurl'\nimport { getMimeType } from './mimes'\n\nasync function embedProp(\n  propName: string,\n  node: HTMLElement,\n  options: Options,\n) {\n  const propValue = node.style?.getPropertyValue(propName)\n  if (propValue) {\n    const cssString = await embedResources(propValue, null, options)\n    node.style.setProperty(\n      propName,\n      cssString,\n      node.style.getPropertyPriority(propName),\n    )\n    return true\n  }\n  return false\n}\n\nasync function embedBackground<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (!(await embedProp('background', clonedNode, options))) {\n    await embedProp('background-image', clonedNode, options)\n  }\n  if (!(await embedProp('mask', clonedNode, options))) {\n    await embedProp('mask-image', clonedNode, options)\n  }\n}\n\nasync function embedImageNode<T extends HTMLElement | SVGImageElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement)\n\n  if (\n    !(isImageElement && !isDataUrl(clonedNode.src)) &&\n    !(\n      isInstanceOfElement(clonedNode, SVGImageElement) &&\n      !isDataUrl(clonedNode.href.baseVal)\n    )\n  ) {\n    return\n  }\n\n  const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal\n\n  const dataURL = await resourceToDataURL(url, getMimeType(url), options)\n  await new Promise((resolve, reject) => {\n    clonedNode.onload = resolve\n    clonedNode.onerror = reject\n\n    const image = clonedNode as HTMLImageElement\n    if (image.decode) {\n      image.decode = resolve as any\n    }\n\n    if (image.loading === 'lazy') {\n      image.loading = 'eager'\n    }\n\n    if (isImageElement) {\n      clonedNode.srcset = ''\n      clonedNode.src = dataURL\n    } else {\n      clonedNode.href.baseVal = dataURL\n    }\n  })\n}\n\nasync function embedChildren<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const children = toArray<HTMLElement>(clonedNode.childNodes)\n  const deferreds = children.map((child) => embedImages(child, options))\n  await Promise.all(deferreds).then(() => clonedNode)\n}\n\nexport async function embedImages<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    await embedBackground(clonedNode, options)\n    await embedImageNode(clonedNode, options)\n    await embedChildren(clonedNode, options)\n  }\n}\n", "import { Options } from './types'\n\nexport function applyStyle<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): T {\n  const { style } = node\n\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor\n  }\n\n  if (options.width) {\n    style.width = `${options.width}px`\n  }\n\n  if (options.height) {\n    style.height = `${options.height}px`\n  }\n\n  const manual = options.style\n  if (manual != null) {\n    Object.keys(manual).forEach((key: any) => {\n      style[key] = manual[key] as string\n    })\n  }\n\n  return node\n}\n", "import type { Options } from './types'\nimport { toArray } from './util'\nimport { fetchAsDataURL } from './dataurl'\nimport { shouldEmbed, embedResources } from './embed-resources'\n\ninterface Metadata {\n  url: string\n  cssText: string\n}\n\nconst cssFetchCache: { [href: string]: Metadata } = {}\n\nasync function fetchCSS(url: string) {\n  let cache = cssFetchCache[url]\n  if (cache != null) {\n    return cache\n  }\n\n  const res = await fetch(url)\n  const cssText = await res.text()\n  cache = { url, cssText }\n\n  cssFetchCache[url] = cache\n\n  return cache\n}\n\nasync function embedFonts(data: Metadata, options: Options): Promise<string> {\n  let cssText = data.cssText\n  const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g\n  const fontLocs = cssText.match(/url\\([^)]+\\)/g) || []\n  const loadFonts = fontLocs.map(async (loc: string) => {\n    let url = loc.replace(regexUrl, '$1')\n    if (!url.startsWith('https://')) {\n      url = new URL(url, data.url).href\n    }\n\n    return fetchAsDataURL<[string, string]>(\n      url,\n      options.fetchRequestInit,\n      ({ result }) => {\n        cssText = cssText.replace(loc, `url(${result})`)\n        return [loc, result]\n      },\n    )\n  })\n\n  return Promise.all(loadFonts).then(() => cssText)\n}\n\nfunction parseCSS(source: string) {\n  if (source == null) {\n    return []\n  }\n\n  const result: string[] = []\n  const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi\n  // strip out comments\n  let cssText = source.replace(commentsRegex, '')\n\n  // eslint-disable-next-line prefer-regex-literals\n  const keyframesRegex = new RegExp(\n    '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})',\n    'gi',\n  )\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const matches = keyframesRegex.exec(cssText)\n    if (matches === null) {\n      break\n    }\n    result.push(matches[0])\n  }\n  cssText = cssText.replace(keyframesRegex, '')\n\n  const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi\n  // to match css & media queries together\n  const combinedCSSRegex =\n    '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n    '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'\n  // unified regex\n  const unifiedRegex = new RegExp(combinedCSSRegex, 'gi')\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let matches = importRegex.exec(cssText)\n    if (matches === null) {\n      matches = unifiedRegex.exec(cssText)\n      if (matches === null) {\n        break\n      } else {\n        importRegex.lastIndex = unifiedRegex.lastIndex\n      }\n    } else {\n      unifiedRegex.lastIndex = importRegex.lastIndex\n    }\n    result.push(matches[0])\n  }\n\n  return result\n}\n\nasync function getCSSRules(\n  styleSheets: CSSStyleSheet[],\n  options: Options,\n): Promise<CSSStyleRule[]> {\n  const ret: CSSStyleRule[] = []\n  const deferreds: Promise<number | void>[] = []\n\n  // First loop inlines imports\n  styleSheets.forEach((sheet) => {\n    if ('cssRules' in sheet) {\n      try {\n        toArray<CSSRule>(sheet.cssRules || []).forEach((item, index) => {\n          if (item.type === CSSRule.IMPORT_RULE) {\n            let importIndex = index + 1\n            const url = (item as CSSImportRule).href\n            const deferred = fetchCSS(url)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  try {\n                    sheet.insertRule(\n                      rule,\n                      rule.startsWith('@import')\n                        ? (importIndex += 1)\n                        : sheet.cssRules.length,\n                    )\n                  } catch (error) {\n                    console.error('Error inserting rule from remote css', {\n                      rule,\n                      error,\n                    })\n                  }\n                }),\n              )\n              .catch((e) => {\n                console.error('Error loading remote css', e.toString())\n              })\n\n            deferreds.push(deferred)\n          }\n        })\n      } catch (e) {\n        const inline =\n          styleSheets.find((a) => a.href == null) || document.styleSheets[0]\n        if (sheet.href != null) {\n          deferreds.push(\n            fetchCSS(sheet.href)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  inline.insertRule(rule, sheet.cssRules.length)\n                }),\n              )\n              .catch((err: unknown) => {\n                console.error('Error loading remote stylesheet', err)\n              }),\n          )\n        }\n        console.error('Error inlining remote css file', e)\n      }\n    }\n  })\n\n  return Promise.all(deferreds).then(() => {\n    // Second loop parses rules\n    styleSheets.forEach((sheet) => {\n      if ('cssRules' in sheet) {\n        try {\n          toArray<CSSStyleRule>(sheet.cssRules || []).forEach((item) => {\n            ret.push(item)\n          })\n        } catch (e) {\n          console.error(`Error while reading CSS rules from ${sheet.href}`, e)\n        }\n      }\n    })\n\n    return ret\n  })\n}\n\nfunction getWebFontRules(cssRules: CSSStyleRule[]): CSSStyleRule[] {\n  return cssRules\n    .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n    .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')))\n}\n\nasync function parseWebFontRules<T extends HTMLElement>(\n  node: T,\n  options: Options,\n) {\n  if (node.ownerDocument == null) {\n    throw new Error('Provided element is not within a Document')\n  }\n\n  const styleSheets = toArray<CSSStyleSheet>(node.ownerDocument.styleSheets)\n  const cssRules = await getCSSRules(styleSheets, options)\n\n  return getWebFontRules(cssRules)\n}\n\nexport async function getWebFontCSS<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<string> {\n  const rules = await parseWebFontRules(node, options)\n  const cssTexts = await Promise.all(\n    rules.map((rule) => {\n      const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null\n      return embedResources(rule.cssText, baseUrl, options)\n    }),\n  )\n\n  return cssTexts.join('\\n')\n}\n\nexport async function embedWebFonts<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const cssText =\n    options.fontEmbedCSS != null\n      ? options.fontEmbedCSS\n      : options.skipFonts\n      ? null\n      : await getWebFontCSS(clonedNode, options)\n\n  if (cssText) {\n    const styleNode = document.createElement('style')\n    const sytleContent = document.createTextNode(cssText)\n\n    styleNode.appendChild(sytleContent)\n\n    if (clonedNode.firstChild) {\n      clonedNode.insertBefore(styleNode, clonedNode.firstChild)\n    } else {\n      clonedNode.appendChild(styleNode)\n    }\n  }\n}\n", "import { Options } from './types'\nimport { cloneNode } from './clone-node'\nimport { embedImages } from './embed-images'\nimport { applyStyle } from './apply-style'\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts'\nimport {\n  getImageSize,\n  getPixelRatio,\n  createImage,\n  canvasToBlob,\n  nodeToDataURL,\n  checkCanvasDimensions,\n} from './util'\n\nexport async function toSvg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const { width, height } = getImageSize(node, options)\n  const clonedNode = (await cloneNode(node, options, true)) as HTMLElement\n  await embedWebFonts(clonedNode, options)\n  await embedImages(clonedNode, options)\n  applyStyle(clonedNode, options)\n  const datauri = await nodeToDataURL(clonedNode, width, height)\n  return datauri\n}\n\nexport async function toCanvas<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<HTMLCanvasElement> {\n  const { width, height } = getImageSize(node, options)\n  const svg = await toSvg(node, options)\n  const img = await createImage(svg)\n\n  const canvas = document.createElement('canvas')\n  const context = canvas.getContext('2d')!\n  const ratio = options.pixelRatio || getPixelRatio()\n  const canvasWidth = options.canvasWidth || width\n  const canvasHeight = options.canvasHeight || height\n\n  canvas.width = canvasWidth * ratio\n  canvas.height = canvasHeight * ratio\n\n  if (!options.skipAutoScale) {\n    checkCanvasDimensions(canvas)\n  }\n  canvas.style.width = `${canvasWidth}`\n  canvas.style.height = `${canvasHeight}`\n\n  if (options.backgroundColor) {\n    context.fillStyle = options.backgroundColor\n    context.fillRect(0, 0, canvas.width, canvas.height)\n  }\n\n  context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n  return canvas\n}\n\nexport async function toPixelData<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Uint8ClampedArray> {\n  const { width, height } = getImageSize(node, options)\n  const canvas = await toCanvas(node, options)\n  const ctx = canvas.getContext('2d')!\n  return ctx.getImageData(0, 0, width, height).data\n}\n\nexport async function toPng<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL()\n}\n\nexport async function toJpeg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL('image/jpeg', options.quality || 1)\n}\n\nexport async function toBlob<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Blob | null> {\n  const canvas = await toCanvas(node, options)\n  const blob = await canvasToBlob(canvas)\n  return blob\n}\n\nexport async function getFontEmbedCSS<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  return getWebFontCSS(node, options)\n}\n", "import * as htmlToImage from \"html-to-image\";\n\nconst weather = {\n  name: \"weather\",\n  symbols: [\n    `ac_unit`,\n    `severe_cold`,\n    `mode_dual`,\n    `storm`,\n    `cyclone`,\n    `flood`,\n    `air `,\n    `landslide`,\n    `airwave`,\n    `heat `,\n    `rainy_heavy`,\n    `mist `,\n    `tornado `,\n    `rainy_light `,\n    `tsunami `,\n    `rainy_snow `,\n    `water `,\n    `nights_stay `,\n    `foggy `,\n    `thunderstorm `,\n    `weather_hail `,\n    `weather_mix `,\n    `weather_snowy `,\n    `cloudy_snowing `,\n    `routine `,\n    `partly_cloudy_day `,\n    `rainy `,\n    `clear_day `,\n    `sunny `,\n    `sunny_snowing `,\n    `snowing_heavy `,\n    `clear_night `,\n    `cloud `,\n  ],\n};\nconst communication = {\n  name: \"communication\",\n  symbols: [\n    \"call_made\",\n    \"call_received\",\n    \"call_missed\",\n    \"call_missed_outgoing\",\n    \"read_more\",\n    \"call_end\",\n    \"phone\",\n    \"phone_enabled\",\n    \"call\",\n    \"call_merge\",\n    \"import_export\",\n    \"dialer_sip\",\n    \"add_ic_call\",\n    \"key_off\",\n    \"person_search\",\n    \"phone_disabled\",\n    \"call_split\",\n    \"wifi_calling\",\n    \"phonelink_erase\",\n    \"vpn_key_off\",\n    \"vpn_key\",\n    \"invert_colors_off\",\n    \"qr_code_scanner\",\n    \"clear_all\",\n    \"location_off\",\n    \"location_on\",\n    \"person_add_disabled\",\n    \"qr_code_2\",\n    \"speaker_phone\",\n    \"no_sim\",\n    \"nat\",\n    \"domain_disabled\",\n    \"swap_calls\",\n    \"rss_feed\",\n    \"dialpad\",\n    \"app_registration\",\n    \"more_time\",\n    \"ring_volume\",\n    \"mark_unread_chat_alt\",\n    \"voicemail\",\n    \"key\",\n    \"chat_bubble_outline\",\n    \"mark_email_unread\",\n    \"duo\",\n    \"sentiment_satisfied_alt\",\n    \"cell_tower\",\n    \"rtt\",\n    \"spoke\",\n    \"forward_to_inbox\",\n    \"mail_outline\",\n    \"cell_wifi\",\n    \"portable_wifi_off\",\n    \"phonelink_ring\",\n    \"alternate_email\",\n    \"hourglass_bottom\",\n    \"hourglass_top\",\n    \"stay_current_portrait\",\n    \"stay_primary_portrait\",\n    \"stay_current_landscape\",\n    \"stay_primary_landscape\",\n    \"domain_verification\",\n    \"pause_presentation\",\n    \"cancel_presentation\",\n    \"present_to_all\",\n    \"list_alt\",\n    \"qr_code\",\n    \"phonelink_lock\",\n    \"mobile_screen_share\",\n    \"desktop_access_disabled\",\n    \"phonelink_setup\",\n    \"hub\",\n    \"unsubscribe\",\n    \"business\",\n    \"send_time_extension\",\n    \"print_disabled\",\n    \"co_present\",\n    \"import_contacts\",\n    \"mark_email_read\",\n    \"comments_disabled\",\n    \"document_scanner\",\n    \"comment\",\n    \"message\",\n    \"forum\",\n    \"sip\",\n    \"chat\",\n    \"mail_lock\",\n    \"stop_screen_share\",\n    \"mark_chat_read\",\n    \"email\",\n    \"3p\",\n    \"live_help\",\n    \"screen_share\",\n    \"mark_chat_unread\",\n    \"textsms\",\n    \"contact_mail\",\n    \"chat_bubble\",\n    \"contacts\",\n    \"contact_phone\",\n    \"contact_emergency\",\n  ],\n};\nconst maps = {\n  name: \"maps\",\n  symbols: [\n    `connecting_airports`,\n    `alt_route`,\n    `transit_enterexit`,\n    `360`,\n    `straight`,\n    `local_phone`,\n    `vaping_rooms`,\n    `turn_slight_left`,\n    `turn_slight_right`,\n    `smoking_rooms`,\n    `grass`,\n    `directions_run`,\n    `turn_left`,\n    `turn_right`,\n    `mode_of_travel`,\n    `multiple_stop`,\n    `moving`,\n    `near_me`,\n    `terrain`,\n    `ramp_right`,\n    `ramp_left`,\n    `navigation`,\n    `vape_free`,\n    `turn_sharp_left`,\n    `turn_sharp_right`,\n    `atm`,\n    `merge`,\n    `soup_kitchen`,\n    `no_drinks`,\n    `local_dining`,\n    `restaurant_menu`,\n    `transfer_within_a_station`,\n    `bungalow`,\n    `stroller`,\n    `tty`,\n    `person_pin_circle`,\n    `no_stroller`,\n    `local_fire_department`,\n    `fork_left`,\n    `fork_right`,\n    `not_listed_location`,\n    `airline_stops`,\n    `room_service`,\n    `pest_control_rodent`,\n    `location_pin`,\n    `u_turn_left`,\n    `u_turn_right`,\n    `layers`,\n    `compass_calibration`,\n    `local_pizza`,\n    `park`,\n    `emergency_share`,\n    `attractions`,\n    `place`,\n    `bakery_dining`,\n    `person_pin`,\n    `egg`,\n    `edit_location`,\n    `category`,\n    `golf_course`,\n    `roofing`,\n    `airlines`,\n    `local_grocery_store`,\n    `spa`,\n    `electric_car`,\n    `cabin`,\n    `no_meeting_room`,\n    `directions_bus`,\n    `child_friendly`,\n    `local_car_wash`,\n    `set_meal`,\n    `trip_origin`,\n    `electric_rickshaw`,\n    `remove_road`,\n    `add_road`,\n    `checkroom`,\n    `corporate_fare`,\n    `zoom_out_map`,\n    `wrong_location`,\n    `sports_bar`,\n    `umbrella`,\n    `electrical_services`,\n    `all_inclusive`,\n    `lunch_dining`,\n    `edit_road`,\n    `sailing`,\n    `add_location_alt`,\n    `directions_walk`,\n    `fitness_center`,\n    `flight_class`,\n    `volunteer_activism`,\n    `desk`,\n    `flight`,\n    `directions_subway_filled`,\n    `directions_transit_filled`,\n    `electric_scooter`,\n    `directions_railway_filled`,\n    `zoom_in_map`,\n    `taxi_alert`,\n    `screen_rotation_alt`,\n    `bus_alert`,\n    `other_houses`,\n    `local_airport`,\n    `smoke_free`,\n    `no_backpack`,\n    `egg_alt`,\n    `local_movies`,\n    `forest`,\n    `satellite`,\n    `museum`,\n    `local_offer`,\n    `chalet`,\n    `cottage`,\n    `wine_bar`,\n    `plumbing`,\n    `sos`,\n    `local_police`,\n    `railway_alert`,\n    `dry`,\n    `local_convenience_store`,\n    `foundation`,\n    `wash`,\n    `soap`,\n    `hail`,\n    `house_siding`,\n    `celebration`,\n    `nightlife`,\n    `local_bar`,\n    `child_care`,\n    `car_repair`,\n    `carpenter`,\n    `wheelchair_pickup`,\n    `local_parking`,\n    `route`,\n    `hardware`,\n    `baby_changing_station`,\n    `near_me_disabled`,\n    `car_rental`,\n    `iron`,\n    `pool`,\n    `beach_access`,\n    `brunch_dining`,\n    `directions_bike`,\n    `fire_extinguisher`,\n    `electric_moped`,\n    `pin_drop`,\n    `dinner_dining`,\n    `diamond`,\n    `add_location`,\n    `icecream`,\n    `houseboat`,\n    `dry_cleaning`,\n    `bike_scooter`,\n    `ac_unit`,\n    `my_location`,\n    `pedal_bike`,\n    `local_atm`,\n    `escalator_warning`,\n    `layers_clear`,\n    `rv_hookup`,\n    `agriculture`,\n    `gite`,\n    `tram`,\n    `edit_attributes`,\n    `restaurant`,\n    `two_wheeler`,\n    `emergency`,\n    `directions_car`,\n    `no_meals`,\n    `safety_check`,\n    `cleaning_services`,\n    `handyman`,\n    `electric_bike`,\n    `fence`,\n    `house`,\n    `snowmobile`,\n    `pest_control`,\n    `design_services`,\n    `edit_location_alt`,\n    `water_damage`,\n    `crib`,\n    `local_taxi`,\n    `storefront`,\n    `crisis_alert`,\n    `airport_shuttle`,\n    `traffic`,\n    `do_not_step`,\n    `directions_car_filled`,\n    `no_transfer`,\n    `takeout_dining`,\n    `night_shelter`,\n    `balcony`,\n    `local_florist`,\n    `charging_station`,\n    `store_mall_directory`,\n    `local_gas_station`,\n    `directions`,\n    `theater_comedy`,\n    `signpost`,\n    `hot_tub`,\n    `ramen_dining`,\n    `hotel`,\n    `local_hotel`,\n    `no_flash`,\n    `meeting_room`,\n    `villa`,\n    `ev_station`,\n    `room_preferences`,\n    `countertops`,\n    `food_bank`,\n    `family_restroom`,\n    `add_business`,\n    `microwave`,\n    `holiday_village`,\n    `train`,\n    `money`,\n    `directions_subway`,\n    `directions_transit`,\n    `no_crash`,\n    `map`,\n    `liquor`,\n    `directions_bus_filled`,\n    `do_not_touch`,\n    `car_crash`,\n    `directions_railway`,\n    `local_laundry_service`,\n    `apartment`,\n    `minor_crash`,\n    `local_library`,\n    `temple_hindu`,\n    `local_drink`,\n    `local_printshop`,\n    `emergency_recording`,\n    `bento`,\n    `bathtub`,\n    `home_repair_service`,\n    `tapas`,\n    `tire_repair`,\n    `rice_bowl`,\n    `hvac`,\n    `church`,\n    `kebab_dining`,\n    `departure_board`,\n    `local_hospital`,\n    `fastfood`,\n    `free_breakfast`,\n    `local_cafe`,\n    `warehouse`,\n    `temple_buddhist`,\n    `local_pharmacy`,\n    `stadium`,\n    `festival`,\n    `business_center`,\n    `fire_truck`,\n    `local_activity`,\n    `local_play`,\n    `local_shipping`,\n    `no_food`,\n    `factory`,\n    `elevator`,\n    `backpack`,\n    `no_photography`,\n    `kitchen`,\n    `escalator`,\n    `synagogue`,\n    `streetview`,\n    `menu_book`,\n    `directions_boat`,\n    `directions_boat_filled`,\n    `rate_review`,\n    `stairs`,\n    `medical_information`,\n    `run_circle`,\n    `badge`,\n    `local_mall`,\n    `local_post_office`,\n    `casino`,\n    `local_see`,\n    `subway`,\n    `breakfast_dining`,\n    `castle`,\n    `maps_ugc`,\n    `beenhere`,\n    `fort`,\n    `mosque`,\n    `medical_services`,\n  ],\n};\nconst social = {\n  name: \"social\",\n  symbols: [\n    `woman`,\n    `person_outline`,\n    `scuba_diving`,\n    `downhill_skiing`,\n    `sports_handball`,\n    `elderly`,\n    `blind`,\n    `snowshoeing`,\n    `assist_walker`,\n    `people_outline`,\n    `co2`,\n    `girl`,\n    `person`,\n    `architecture`,\n    `plus_one`,\n    `boy`,\n    `hiking`,\n    `snowboarding`,\n    `nordic_walking`,\n    `skateboarding`,\n    `person_remove`,\n    `emoji_nature`,\n    `sledding`,\n    `person_off`,\n    `severe_cold`,\n    `personal_injury`,\n    `precision_manufacturing`,\n    `female`,\n    `person_2`,\n    `recycling`,\n    `person_add`,\n    `nights_stay`,\n    `person_4`,\n    `whatshot`,\n    `notifications_off`,\n    `kayaking`,\n    `engineering`,\n    `kitesurfing`,\n    `emoji_objects`,\n    `woman_2`,\n    `male`,\n    `cruelty_free`,\n    `person_3`,\n    `coronavirus`,\n    `group_remove`,\n    `sports_basketball`,\n    `surfing`,\n    `face_6`,\n    `notification_add`,\n    `safety_divider`,\n    `tsunami`,\n    `group_add`,\n    `man_2`,\n    `sports_volleyball`,\n    `man_3`,\n    `sports_esports`,\n    `man_4`,\n    `notifications_none`,\n    `sports_football`,\n    `man`,\n    `piano_off`,\n    `notifications_active`,\n    `clean_hands`,\n    `water_drop`,\n    `cake`,\n    `interests`,\n    `sports_motorsports`,\n    `sports_gymnastics`,\n    `emoji_flags`,\n    `share`,\n    `face_4`,\n    `domain_add`,\n    `sports_golf`,\n    `heart_broken`,\n    `flood`,\n    `emoji_people`,\n    `military_tech`,\n    `real_estate_agent`,\n    `self_improvement`,\n    `social_distance`,\n    `single_bed`,\n    `paragliding`,\n    `facebook`,\n    `sports_baseball`,\n    `sports_martial_arts`,\n    `thunderstorm`,\n    `connect_without_contact`,\n    `emoji_transportation`,\n    `sports_hockey`,\n    `sports_tennis`,\n    `elderly_woman`,\n    `science`,\n    `sports_cricket`,\n    `6_ft_apart`,\n    `sentiment_neutral`,\n    `ios_share`,\n    `sentiment_satisfied`,\n    `sentiment_dissatisfied`,\n    `emoji_emotions`,\n    `sick`,\n    `cookie`,\n    `add_reaction`,\n    `groups_3`,\n    `groups`,\n    `sports`,\n    `remove_moderator`,\n    `sentiment_very_dissatisfied`,\n    `face_5`,\n    `outdoor_grill`,\n    `dew_point`,\n    `transgender`,\n    `notifications_paused`,\n    `mood`,\n    `mood_bad`,\n    `construction`,\n    `face_3`,\n    `edit_notifications`,\n    `emoji_symbols`,\n    `groups_2`,\n    `sentiment_very_satisfied`,\n    `masks`,\n    `no_adult_content`,\n    `tornado`,\n    `reduce_capacity`,\n    `group`,\n    `people`,\n    `psychology`,\n    `workspace_premium`,\n    `deck`,\n    `history_edu`,\n    `cyclone`,\n    `notifications`,\n    `handshake`,\n    `vaccines`,\n    `south_america`,\n    `sports_mma`,\n    `follow_the_signs`,\n    `compost`,\n    `emoji_events`,\n    `luggage`,\n    `travel_explore`,\n    `no_luggage`,\n    `psychology_alt`,\n    `king_bed`,\n    `sports_kabaddi`,\n    `people_alt`,\n    `sports_soccer`,\n    `group_off`,\n    `scale`,\n    `school`,\n    `pages`,\n    `public_off`,\n    `sanitizer`,\n    `emoji_food_beverage`,\n    `health_and_safety`,\n    `public`,\n    `diversity_1`,\n    `piano`,\n    `location_city`,\n    `pix`,\n    `thumb_down_alt`,\n    `thumb_up_alt`,\n    `diversity_2`,\n    `diversity_3`,\n    `volcano`,\n    `recommend`,\n    `ice_skating`,\n    `domain`,\n    `hive`,\n    `landslide`,\n    `sports_rugby`,\n    `wallet`,\n    `fireplace`,\n    `switch_account`,\n    `sign_language`,\n    `roller_skating`,\n    `back_hand`,\n    `front_hand`,\n    `scoreboard`,\n    `poll`,\n    `add_moderator`,\n    `18_up_rating`,\n    `party_mode`,\n    `waving_hand`,\n    `face_2`,\n  ],\n};\n\nfunction getIconHTML() {\n  return [weather, communication, maps, social]\n    .map((iconSet) => {\n      const innerHTML = iconSet.symbols\n        .map(\n          (symbol) =>\n            `<tr class=\"js-symbol\">\n        <td>\n          <span class=\"js-symbol__name\">${symbol}</span>\n        </td>\n        <td>\n          <span\n            class='material-symbols-outlined js-symbol__icon'\n            data-character=\"${symbol}\"\n            style=\"\n              background-color: white;\n              color: black;\n              font-variation-settings: 'wght' 700, 'FILL_color' 1;\n            \"\n          >\n            ${symbol}\n          </span>\n        </td>\n        <td>\n          <span class=\"js-symbol__luminance\"></span>\n        </td>\n        <td>\n          <span class=\"js-symbol__scaled-luminance\"></span>\n        </td>\n      </tr>`\n        )\n        .join(\"\");\n      return `<section class=\"mb-8 js-section\" data-section=\"${iconSet.name}\">\n      <details>\n        <summary>\n          <span class=\"text-2xl font-bold mb-4\">${iconSet.name}</span>\n        </summary>\n        <div class=\"mt-2 mb-4\">\n          <button class=\"js-generate-images bg-[khaki] border border-black px-1 py-2 text-xs\" data-section=\"${iconSet.name}\">\n            Get luminance\n          </button>\n          <button class=\"js-generate-scale bg-[khaki] border border-black px-1 py-2 text-xs\" data-section=\"${iconSet.name}\">\n            Scale luminance\n          </button>\n          <button class=\"js-export bg-[khaki] border border-black px-1 py-2 text-xs\" data-section=\"${iconSet.name}\">\n            Export symbol set\n          </button>\n        </div>\n        <div class=\"mb-4 text-xs\">\n          <p>\n            <span>Minimum luminance: </span>\n            <span class=\"js-minimum-luminance\"></span>\n          </p>\n          <p>\n            <span>Maximum luminance: </span>\n            <span class=\"js-maximum-luminance\"></span>\n          </p>\n          <p>\n            <span>Export output: </span>\n            <textarea class=\"js-export-output border-1 border-black block w-full h-32\"></textarea>\n          </p>\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th class=\"text-left font-normal text-xs\">Name</th>\n              <th class=\"text-left font-normal text-xs\">Icon</th>\n              <th class=\"text-left font-normal text-xs\">Luminance</th>\n              <th class=\"text-left font-normal text-xs\">Luminance (scaled)</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${innerHTML}\n          </tbody>\n        </table>\n      </details>\n    </section>`;\n    })\n    .join(\"\");\n}\n\nfunction recordLuminanceValues(section) {\n  const { symbols } = section;\n  Object.values(symbols).forEach((elements) => {\n    htmlToImage.toPixelData(elements.icon).then((data) => {\n      const chunks = data.reduce((acc, value, index) => {\n        const chunkIndex = Math.floor(index / 4);\n        if (!acc[chunkIndex]) {\n          acc[chunkIndex] = [];\n        }\n        acc[chunkIndex].push(value);\n        return acc;\n      }, []);\n      const luminanceByPixel = chunks.map((chunk) => {\n        const [r, g, b] = chunk;\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      });\n      const averageLuminance = Math.round(\n        luminanceByPixel.reduce((acc, value) => acc + value, 0) /\n          luminanceByPixel.length\n      );\n      elements.luminance.textContent = averageLuminance;\n    });\n  });\n}\n\nfunction scaleLuminanceValues(section) {\n  const { symbols, minimumLuminance, maximumLuminance } = section;\n  const luminanceValues = Object.values(symbols).map((symbol) =>\n    parseFloat(symbol.luminance.textContent)\n  );\n  const minimumLuminanceValue = Math.min(...luminanceValues);\n  const maximumLuminanceValue = Math.max(...luminanceValues);\n  minimumLuminance.textContent = minimumLuminanceValue;\n  maximumLuminance.textContent = maximumLuminanceValue;\n\n  Object.values(symbols).forEach(({ luminance, scaledLuminance }) => {\n    const luminanceValue = parseFloat(luminance.textContent);\n    const scaledLuminanceValue =\n      (luminanceValue - minimumLuminanceValue) /\n      (maximumLuminanceValue - minimumLuminanceValue);\n    const projectedLuminanceValue = Math.round(scaledLuminanceValue * 255);\n    scaledLuminance.textContent = projectedLuminanceValue;\n  });\n}\n\nfunction exportAsSymbolSet(name, section) {\n  const sorted = Object.entries(section.symbols)\n    .map(([name, symbol]) => {\n      const scaledLuminance = parseFloat(symbol.scaledLuminance.textContent);\n      return {\n        name,\n        luminance: scaledLuminance,\n      };\n    })\n    .sort((a, b) => a.luminance - b.luminance);\n\n  section.exportOutput.value = `\nimport { SymbolSet } from \"./symbol-set.js\";\n\nexport const ${name} = new SymbolSet(\"${name}\", [\n  ${sorted\n    .map(\n      (symbol) => `{ name: \"${symbol.name}\", luminance: ${symbol.luminance} }`\n    )\n    .join(\",\\n  \")}\n]);\n  `;\n  console.log(sorted);\n}\n\nfunction initialize() {\n  const canvas = document.getElementById(\"output\");\n  canvas.innerHTML = getIconHTML();\n  const sections = [...document.querySelectorAll(\".js-section\")].reduce(\n    (acc, section) => {\n      const name = section.dataset.section;\n      const symbols = [...section.querySelectorAll(\".js-symbol\")].reduce(\n        (acc, element) => {\n          const name = element\n            .querySelector(\".js-symbol__name\")\n            .textContent.trim();\n          const icon = element.querySelector(\".js-symbol__icon\");\n          const luminance = element.querySelector(\".js-symbol__luminance\");\n          const scaledLuminance = element.querySelector(\n            \".js-symbol__scaled-luminance\"\n          );\n          acc[name] = { element, icon, luminance, scaledLuminance };\n          return acc;\n        },\n        {}\n      );\n      const luminanceButton = section.querySelector(\n        `.js-generate-images[data-section=${name}]`\n      );\n      const scaleButton = section.querySelector(\n        `.js-generate-scale[data-section=${name}]`\n      );\n      const exportButton = section.querySelector(\n        `.js-export[data-section=${name}]`\n      );\n      const minimumLuminance = section.querySelector(`.js-minimum-luminance`);\n      const maximumLuminance = section.querySelector(`.js-maximum-luminance`);\n      const exportOutput = section.querySelector(`.js-export-output`);\n      acc[name] = {\n        element: section,\n        symbols,\n        luminanceButton,\n        scaleButton,\n        exportButton,\n        minimumLuminance,\n        maximumLuminance,\n        exportOutput,\n      };\n      return acc;\n    },\n    {}\n  );\n\n  console.log(sections);\n\n  Object.entries(sections).forEach(([name, section]) => {\n    const { luminanceButton, scaleButton, exportButton } = section;\n    luminanceButton.addEventListener(\"click\", () => {\n      recordLuminanceValues(section);\n    });\n    scaleButton.addEventListener(\"click\", () => {\n      scaleLuminanceValues(section);\n    });\n    exportButton.addEventListener(\"click\", () => {\n      exportAsSymbolSet(name, section);\n    });\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", initialize);\n"],
  "mappings": "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ACA,QACA,gBACA,OACA,aACA,gBACA,aACA,cACA,UACA,gBACA,iBACA,aACA,eACA,kBACA,cACA,UACA,oBACA,kBACA,YACA,eACA,cACA,sBACA,YACA,gBACA,SACA,MACA,kBACA,aACA,WACA,UACA,mBACA,YACA,cACA,uBACA,YACA,MACA,sBACA,oBACA,MACA,0BACA,aACA,MACA,QACA,mBACA,eACA,YACA,oBACA,iBACA,kBACA,mBACA,gBACA,wBACA,wBACA,yBACA,yBACA,sBACA,qBACA,sBACA,iBACA,WACA,UACA,iBACA,sBACA,0BACA,kBACA,MACA,cACA,WACA,sBACA,iBACA,aACA,kBACA,kBACA,oBACA,mBACA,UACA,UACA,QACA,MACA,OACA,YACA,oBACA,iBACA,QACA,KACA,YACA,eACA,mBACA,UACA,eACA,cACA,WACA,gBACA,mBACF,CACF,EACMC,GAAO,CACX,KAAM,OACN,QAAS,CACP,sBACA,YACA,oBACA,MACA,WACA,cACA,eACA,mBACA,oBACA,gBACA,QACA,iBACA,YACA,aACA,iBACA,gBACA,SACA,UACA,UACA,aACA,YACA,aACA,YACA,kBACA,mBACA,MACA,QACA,eACA,YACA,eACA,kBACA,4BACA,WACA,WACA,MACA,oBACA,cACA,wBACA,YACA,aACA,sBACA,gBACA,eACA,sBACA,eACA,cACA,eACA,SACA,sBACA,cACA,OACA,kBACA,cACA,QACA,gBACA,aACA,MACA,gBACA,WACA,cACA,UACA,WACA,sBACA,MACA,eACA,QACA,kBACA,iBACA,iBACA,iBACA,WACA,cACA,oBACA,cACA,WACA,YACA,iBACA,eACA,iBACA,aACA,WACA,sBACA,gBACA,eACA,YACA,UACA,mBACA,kBACA,iBACA,eACA,qBACA,OACA,SACA,2BACA,4BACA,mBACA,4BACA,cACA,aACA,sBACA,YACA,eACA,gBACA,aACA,cACA,UACA,eACA,SACA,YACA,SACA,cACA,SACA,UACA,WACA,WACA,MACA,eACA,gBACA,MACA,0BACA,aACA,OACA,OACA,OACA,eACA,cACA,YACA,YACA,aACA,aACA,YACA,oBACA,gBACA,QACA,WACA,wBACA,mBACA,aACA,OACA,OACA,eACA,gBACA,kBACA,oBACA,iBACA,WACA,gBACA,UACA,eACA,WACA,YACA,eACA,eACA,UACA,cACA,aACA,YACA,oBACA,eACA,YACA,cACA,OACA,OACA,kBACA,aACA,cACA,YACA,iBACA,WACA,eACA,oBACA,WACA,gBACA,QACA,QACA,aACA,eACA,kBACA,oBACA,eACA,OACA,aACA,aACA,eACA,kBACA,UACA,cACA,wBACA,cACA,iBACA,gBACA,UACA,gBACA,mBACA,uBACA,oBACA,aACA,iBACA,WACA,UACA,eACA,QACA,cACA,WACA,eACA,QACA,aACA,mBACA,cACA,YACA,kBACA,eACA,YACA,kBACA,QACA,QACA,oBACA,qBACA,WACA,MACA,SACA,wBACA,eACA,YACA,qBACA,wBACA,YACA,cACA,gBACA,eACA,cACA,kBACA,sBACA,QACA,UACA,sBACA,QACA,cACA,YACA,OACA,SACA,eACA,kBACA,iBACA,WACA,iBACA,aACA,YACA,kBACA,iBACA,UACA,WACA,kBACA,aACA,iBACA,aACA,iBACA,UACA,UACA,WACA,WACA,iBACA,UACA,YACA,YACA,aACA,YACA,kBACA,yBACA,cACA,SACA,sBACA,aACA,QACA,aACA,oBACA,SACA,YACA,SACA,mBACA,SACA,WACA,WACA,OACA,SACA,kBACF,CACF,EACMC,GAAS,CACb,KAAM,SACN,QAAS,CACP,QACA,iBACA,eACA,kBACA,kBACA,UACA,QACA,cACA,gBACA,iBACA,MACA,OACA,SACA,eACA,WACA,MACA,SACA,eACA,iBACA,gBACA,gBACA,eACA,WACA,aACA,cACA,kBACA,0BACA,SACA,WACA,YACA,aACA,cACA,WACA,WACA,oBACA,WACA,cACA,cACA,gBACA,UACA,OACA,eACA,WACA,cACA,eACA,oBACA,UACA,SACA,mBACA,iBACA,UACA,YACA,QACA,oBACA,QACA,iBACA,QACA,qBACA,kBACA,MACA,YACA,uBACA,cACA,aACA,OACA,YACA,qBACA,oBACA,cACA,QACA,SACA,aACA,cACA,eACA,QACA,eACA,gBACA,oBACA,mBACA,kBACA,aACA,cACA,WACA,kBACA,sBACA,eACA,0BACA,uBACA,gBACA,gBACA,gBACA,UACA,iBACA,aACA,oBACA,YACA,sBACA,yBACA,iBACA,OACA,SACA,eACA,WACA,SACA,SACA,mBACA,8BACA,SACA,gBACA,YACA,cACA,uBACA,OACA,WACA,eACA,SACA,qBACA,gBACA,WACA,2BACA,QACA,mBACA,UACA,kBACA,QACA,SACA,aACA,oBACA,OACA,cACA,UACA,gBACA,YACA,WACA,gBACA,aACA,mBACA,UACA,eACA,UACA,iBACA,aACA,iBACA,WACA,iBACA,aACA,gBACA,YACA,QACA,SACA,QACA,aACA,YACA,sBACA,oBACA,SACA,cACA,QACA,gBACA,MACA,iBACA,eACA,cACA,cACA,UACA,YACA,cACA,SACA,OACA,YACA,eACA,SACA,YACA,iBACA,gBACA,iBACA,YACA,aACA,aACA,OACA,gBACA,eACA,aACA,cACA,QACF,CACF,EAEA,SAASC,IAAc,CACrB,MAAO,CAACJ,GAASC,GAAeC,GAAMC,EAAM,EACzC,IAAKE,GAAY,CAChB,IAAMC,EAAYD,EAAQ,QACvB,IACEE,GACC;AAAA;AAAA,0CAE8BA,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA,8BAKlBA,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAOtBA,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAUZ,EACC,KAAK,EAAE,EACV,MAAO,kDAAkDF,EAAQ,IAAI;AAAA;AAAA;AAAA,kDAGzBA,EAAQ,IAAI;AAAA;AAAA;AAAA,8GAGgDA,EAAQ,IAAI;AAAA;AAAA;AAAA,6GAGbA,EAAQ,IAAI;AAAA;AAAA;AAAA,qGAGpBA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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",
  "names": ["resolveUrl", "url", "baseUrl", "doc", "base", "uuid", "counter", "random", "toArray", "arrayLike", "arr", "i", "l", "px", "node", "styleProperty", "val", "getNodeWidth", "leftBorder", "rightBorder", "getNodeHeight", "topBorder", "bottomBorder", "getImageSize", "targetNode", "options", "width", "height", "getPixelRatio", "ratio", "FINAL_PROCESS", "canvasDimensionLimit", "checkCanvasDimensions", "canvas", "createImage", "url", "resolve", "reject", "img", "svgToDataURL", "svg", "html", "nodeToDataURL", "node", "width", "height", "xmlns", "foreignObject", "isInstanceOfElement", "instance", "nodePrototype", "formatCSSText", "style", "content", "formatCSSProperties", "toArray", "name", "value", "priority", "getPseudoElementStyle", "className", "pseudo", "selector", "cssText", "clonePseudoElement", "nativeNode", "clonedNode", "uuid", "styleElement", "clonePseudoElements", "WOFF", "JPEG", "mimes", "getExtension", "url", "match", "getMimeType", "extension", "getContentFromDataUrl", "dataURL", "isDataUrl", "url", "makeDataUrl", "content", "mimeType", "fetchAsDataURL", "init", "process", "res", "blob", "resolve", "reject", "reader", "error", "cache", "getCacheKey", "contentType", "includeQueryParams", "key", "resourceToDataURL", "resourceUrl", "options", "cacheKey", "result", "msg", "cloneCanvasElement", "canvas", "dataURL", "createImage", "cloneVideoElement", "video", "options", "ctx", "poster", "contentType", "getMimeType", "resourceToDataURL", "cloneIFrameElement", "iframe", "_a", "cloneNode", "cloneSingleNode", "node", "isInstanceOfElement", "isSlotElement", "cloneChildren", "nativeNode", "clonedNode", "children", "toArray", "_b", "deferred", "child", "clonedChild", "cloneCSSStyle", "targetStyle", "sourceStyle", "name", "value", "cloneInputValue", "cloneSelectValue", "clonedSelect", "selectedOption", "decorate", "clonePseudoElements", "ensureSVGSymbols", "clone", "uses", "processedDefs", "i", "id", "exist", "definition", "nodes", "ns", "svg", "defs", "isRoot", "URL_REGEX", "URL_WITH_FORMAT_REGEX", "FONT_SRC_REGEX", "toRegex", "url", "escaped", "parseURLs", "cssText", "urls", "raw", "quotation", "isDataUrl", "embed", "resourceURL", "baseURL", "options", "getContentFromUrl", "resolvedURL", "resolveUrl", "contentType", "getMimeType", "dataURL", "content", "makeDataUrl", "resourceToDataURL", "filterPreferredFontFormat", "str", "preferredFontFormat", "match", "src", "format", "shouldEmbed", "embedResources", "baseUrl", "filteredCSSText", "deferred", "css", "embedProp", "propName", "node", "options", "propValue", "_a", "cssString", "embedResources", "embedBackground", "clonedNode", "embedImageNode", "isImageElement", "isInstanceOfElement", "isDataUrl", "url", "dataURL", "resourceToDataURL", "getMimeType", "resolve", "reject", "image", "embedChildren", "deferreds", "toArray", "child", "embedImages", "applyStyle", "node", "options", "style", "manual", "key", "cssFetchCache", "fetchCSS", "url", "cache", "cssText", "embedFonts", "data", "options", "regexUrl", "loadFonts", "loc", "fetchAsDataURL", "result", "parseCSS", "source", "commentsRegex", "keyframesRegex", "matches", "importRegex", "combinedCSSRegex", "unifiedRegex", "getCSSRules", "styleSheets", "ret", "deferreds", "sheet", "toArray", "item", "index", "importIndex", "deferred", "metadata", "rule", "error", "e", "inline", "a", "err", "getWebFontRules", "cssRules", "shouldEmbed", "parseWebFontRules", "node", "getWebFontCSS", "rules", "baseUrl", "embedResources", "embedWebFonts", "clonedNode", "styleNode", "sytleContent", "toSvg", "node", "options", "width", "height", "getImageSize", "clonedNode", "cloneNode", "embedWebFonts", "embedImages", "applyStyle", "nodeToDataURL", "toCanvas", "svg", "img", "createImage", "canvas", "context", "ratio", "getPixelRatio", "canvasWidth", "canvasHeight", "checkCanvasDimensions", "toPixelData", "weather", "communication", "maps", "social", "getIconHTML", "iconSet", "innerHTML", "symbol", "recordLuminanceValues", "section", "symbols", "elements", "toPixelData", "data", "luminanceByPixel", "acc", "value", "index", "chunkIndex", "chunk", "r", "g", "b", "averageLuminance", "scaleLuminanceValues", "minimumLuminance", "maximumLuminance", "luminanceValues", "minimumLuminanceValue", "maximumLuminanceValue", "luminance", "scaledLuminance", "scaledLuminanceValue", "projectedLuminanceValue", "exportAsSymbolSet", "name", "sorted", "a", "initialize", "canvas", "sections", "element", "icon", "luminanceButton", "scaleButton", "exportButton", "exportOutput"]
}
